function VisibilityPolygon(){}module.exports=VisibilityPolygon,VisibilityPolygon.compute=function(i,n){for(var o=[],l=i[0],t=i[1],e=i[0],s=i[1],y=0;y<n.length;++y){for(var r=0;r<2;++r)l=Math.min(l,n[y][r][0]),t=Math.min(t,n[y][r][1]),e=Math.max(e,n[y][r][0]),s=Math.max(s,n[y][r][1]);o.push([[n[y][0][0],n[y][0][1]],[n[y][1][0],n[y][1][1]]])}--l,--t,++e,++s,o.push([[l,t],[e,t]]),o.push([[e,t],[e,s]]),o.push([[e,s],[l,s]]),o.push([[l,s],[l,t]]);for(var g=[],a=VisibilityPolygon.sortPoints(i,o),b=new Array(o.length),y=0;y<b.length;++y)b[y]=-1;for(var P=[],V=[i[0]+1,i[1]],y=0;y<o.length;++y){var u=VisibilityPolygon.angle(o[y][0],i),h=VisibilityPolygon.angle(o[y][1],i),c=!1;u>-180&&u<=0&&h<=180&&h>=0&&h-u>180&&(c=!0),h>-180&&h<=0&&u<=180&&u>=0&&u-h>180&&(c=!0),c&&VisibilityPolygon.insert(y,P,i,o,V,b)}for(var y=0;y<a.length;){var f=!1,p=!1,v=y,d=o[a[y][0]][a[y][1]],m=P[0];do{if(-1!=b[a[y][0]]?(a[y][0]==m&&(f=!0,d=o[a[y][0]][a[y][1]]),VisibilityPolygon.remove(b[a[y][0]],P,i,o,d,b)):(VisibilityPolygon.insert(a[y][0],P,i,o,d,b),P[0]!=m&&(p=!0)),++y==a.length)break}while(a[y][2]<a[v][2]+VisibilityPolygon.epsilon());if(f){g.push(d);var L=VisibilityPolygon.intersectLines(o[P[0]][0],o[P[0]][1],i,d);VisibilityPolygon.equal(L,d)||g.push(L)}else p&&(g.push(VisibilityPolygon.intersectLines(o[m][0],o[m][1],i,d)),g.push(VisibilityPolygon.intersectLines(o[P[0]][0],o[P[0]][1],i,d)))}return g},VisibilityPolygon.computeViewport=function(i,n,o,l){for(var t=[],e=[[o[0],o[1]],[l[0],o[1]],[l[0],l[1]],[o[0],l[1]]],s=0;s<n.length;++s)if(!(n[s][0][0]<o[0]&&n[s][1][0]<o[0]||n[s][0][1]<o[1]&&n[s][1][1]<o[1]||n[s][0][0]>l[0]&&n[s][1][0]>l[0]||n[s][0][1]>l[1]&&n[s][1][1]>l[1])){for(var y=[],r=0;r<e.length;++r){var g=r+1;if(g==e.length&&(g=0),VisibilityPolygon.doLineSegmentsIntersect(n[s][0][0],n[s][0][1],n[s][1][0],n[s][1][1],e[r][0],e[r][1],e[g][0],e[g][1])){var a=VisibilityPolygon.intersectLines(n[s][0],n[s][1],e[r],e[g]);if(2!=a.length)continue;if(VisibilityPolygon.equal(a,n[s][0])||VisibilityPolygon.equal(a,n[s][1]))continue;y.push(a)}}for(var b=[n[s][0][0],n[s][0][1]];y.length>0;){for(var P=0,V=VisibilityPolygon.distance(b,y[0]),r=1;r<y.length;++r){var u=VisibilityPolygon.distance(b,y[r]);u<V&&(V=u,P=r)}t.push([[b[0],b[1]],[y[P][0],y[P][1]]]),b[0]=y[P][0],b[1]=y[P][1],y.splice(P,1)}t.push([b,[n[s][1][0],n[s][1][1]]])}for(var h=[],s=0;s<t.length;++s)VisibilityPolygon.inViewport(t[s][0],o,l)&&VisibilityPolygon.inViewport(t[s][1],o,l)&&h.push([[t[s][0][0],t[s][0][1]],[t[s][1][0],t[s][1][1]]]);var c=10*VisibilityPolygon.epsilon();return h.push([[o[0]-c,o[1]-c],[l[0]+c,o[1]-c]]),h.push([[l[0]+c,o[1]-c],[l[0]+c,l[1]+c]]),h.push([[l[0]+c,l[1]+c],[o[0]-c,l[1]+c]]),h.push([[o[0]-c,l[1]+c],[o[0]-c,o[1]-c]]),VisibilityPolygon.compute(i,h)},VisibilityPolygon.inViewport=function(i,n,o){return!(i[0]<n[0]-VisibilityPolygon.epsilon())&&(!(i[1]<n[1]-VisibilityPolygon.epsilon())&&(!(i[0]>o[0]+VisibilityPolygon.epsilon())&&!(i[1]>o[1]+VisibilityPolygon.epsilon())))},VisibilityPolygon.inPolygon=function(i,n){for(var o=n[0][0],l=0;l<n.length;++l)o=Math.min(n[l][0],o),o=Math.min(n[l][1],o);for(var t=[o-1,o-1],e=0,l=0;l<n.length;++l){var s=l+1;if(s==n.length&&(s=0),VisibilityPolygon.doLineSegmentsIntersect(t[0],t[1],i[0],i[1],n[l][0],n[l][1],n[s][0],n[s][1])){var y=VisibilityPolygon.intersectLines(t,i,n[l],n[s]);if(VisibilityPolygon.equal(i,y))return!0;VisibilityPolygon.equal(y,n[l])?VisibilityPolygon.angle2(i,t,n[s])<180&&++e:VisibilityPolygon.equal(y,n[s])?VisibilityPolygon.angle2(i,t,n[l])<180&&++e:++e}}return e%2!=0},VisibilityPolygon.convertToSegments=function(i){for(var n=[],o=0;o<i.length;++o)for(var l=0;l<i[o].length;++l){var t=l+1;t==i[o].length&&(t=0),n.push([[i[o][l][0],i[o][l][1]],[i[o][t][0],i[o][t][1]]])}return n},VisibilityPolygon.breakIntersections=function(i){for(var n=[],o=0;o<i.length;++o){for(var l=[],t=0;t<i.length;++t)if(o!=t&&VisibilityPolygon.doLineSegmentsIntersect(i[o][0][0],i[o][0][1],i[o][1][0],i[o][1][1],i[t][0][0],i[t][0][1],i[t][1][0],i[t][1][1])){var e=VisibilityPolygon.intersectLines(i[o][0],i[o][1],i[t][0],i[t][1]);if(2!=e.length)continue;if(VisibilityPolygon.equal(e,i[o][0])||VisibilityPolygon.equal(e,i[o][1]))continue;l.push(e)}for(var s=[i[o][0][0],i[o][0][1]];l.length>0;){for(var y=0,r=VisibilityPolygon.distance(s,l[0]),t=1;t<l.length;++t){var g=VisibilityPolygon.distance(s,l[t]);g<r&&(r=g,y=t)}n.push([[s[0],s[1]],[l[y][0],l[y][1]]]),s[0]=l[y][0],s[1]=l[y][1],l.splice(y,1)}n.push([s,[i[o][1][0],i[o][1][1]]])}return n},VisibilityPolygon.epsilon=function(){return 1e-7},VisibilityPolygon.equal=function(i,n){return Math.abs(i[0]-n[0])<VisibilityPolygon.epsilon()&&Math.abs(i[1]-n[1])<VisibilityPolygon.epsilon()},VisibilityPolygon.remove=function(i,n,o,l,t,e){if(e[n[i]]=-1,i==n.length-1)return void n.pop();n[i]=n.pop(),e[n[i]]=i;var s=i,y=VisibilityPolygon.parent(s);if(0!=s&&VisibilityPolygon.lessThan(n[s],n[y],o,l,t))for(;s>0;){var y=VisibilityPolygon.parent(s);if(!VisibilityPolygon.lessThan(n[s],n[y],o,l,t))break;e[n[y]]=s,e[n[s]]=y;var r=n[s];n[s]=n[y],n[y]=r,s=y}else for(;;){var g=VisibilityPolygon.child(s),a=g+1;if(g<n.length&&VisibilityPolygon.lessThan(n[g],n[s],o,l,t)&&(a==n.length||VisibilityPolygon.lessThan(n[g],n[a],o,l,t))){e[n[g]]=s,e[n[s]]=g;var r=n[g];n[g]=n[s],n[s]=r,s=g}else{if(!(a<n.length&&VisibilityPolygon.lessThan(n[a],n[s],o,l,t)))break;e[n[a]]=s,e[n[s]]=a;var r=n[a];n[a]=n[s],n[s]=r,s=a}}},VisibilityPolygon.insert=function(i,n,o,l,t,e){if(0!=VisibilityPolygon.intersectLines(l[i][0],l[i][1],o,t).length){var s=n.length;for(n.push(i),e[i]=s;s>0;){var y=VisibilityPolygon.parent(s);if(!VisibilityPolygon.lessThan(n[s],n[y],o,l,t))break;e[n[y]]=s,e[n[s]]=y;var r=n[s];n[s]=n[y],n[y]=r,s=y}}},VisibilityPolygon.lessThan=function(i,n,o,l,t){var e=VisibilityPolygon.intersectLines(l[i][0],l[i][1],o,t),s=VisibilityPolygon.intersectLines(l[n][0],l[n][1],o,t);if(!VisibilityPolygon.equal(e,s)){return VisibilityPolygon.distance(e,o)<VisibilityPolygon.distance(s,o)}var y=0;VisibilityPolygon.equal(e,l[i][0])&&(y=1);var r=0;VisibilityPolygon.equal(s,l[n][0])&&(r=1);var g=VisibilityPolygon.angle2(l[i][y],e,o),a=VisibilityPolygon.angle2(l[n][r],s,o);return g<180?a>180||a<g:g<a},VisibilityPolygon.parent=function(i){return Math.floor((i-1)/2)},VisibilityPolygon.child=function(i){return 2*i+1},VisibilityPolygon.angle2=function(i,n,o){var l=VisibilityPolygon.angle(i,n),t=VisibilityPolygon.angle(n,o),e=l-t;return e<0&&(e+=360),e>360&&(e-=360),e},VisibilityPolygon.sortPoints=function(i,n){for(var o=new Array(2*n.length),l=0;l<n.length;++l)for(var t=0;t<2;++t){var e=VisibilityPolygon.angle(n[l][t],i);o[2*l+t]=[l,t,e]}return o.sort(function(i,n){return i[2]-n[2]}),o},VisibilityPolygon.angle=function(i,n){return 180*Math.atan2(n[1]-i[1],n[0]-i[0])/Math.PI},VisibilityPolygon.intersectLines=function(i,n,o,l){var t=l[0]-o[0],e=l[1]-o[1],s=n[0]-i[0],y=n[1]-i[1],r=e*s-t*y;if(0!=r){var g=(t*(i[1]-o[1])-e*(i[0]-o[0]))/r;return[i[0]-g*-s,i[1]-g*-y]}return[]},VisibilityPolygon.distance=function(i,n){var o=i[0]-n[0],l=i[1]-n[1];return o*o+l*l},VisibilityPolygon.isOnSegment=function(i,n,o,l,t,e){return(i<=t||o<=t)&&(t<=i||t<=o)&&(n<=e||l<=e)&&(e<=n||e<=l)},VisibilityPolygon.computeDirection=function(i,n,o,l,t,e){return a=(t-i)*(l-n),b=(o-i)*(e-n),a<b?-1:a>b?1:0},VisibilityPolygon.doLineSegmentsIntersect=function(i,n,o,l,t,e,s,y){return d1=VisibilityPolygon.computeDirection(t,e,s,y,i,n),d2=VisibilityPolygon.computeDirection(t,e,s,y,o,l),d3=VisibilityPolygon.computeDirection(i,n,o,l,t,e),d4=VisibilityPolygon.computeDirection(i,n,o,l,s,y),(d1>0&&d2<0||d1<0&&d2>0)&&(d3>0&&d4<0||d3<0&&d4>0)||0==d1&&VisibilityPolygon.isOnSegment(t,e,s,y,i,n)||0==d2&&VisibilityPolygon.isOnSegment(t,e,s,y,o,l)||0==d3&&VisibilityPolygon.isOnSegment(i,n,o,l,t,e)||0==d4&&VisibilityPolygon.isOnSegment(i,n,o,l,s,y)};